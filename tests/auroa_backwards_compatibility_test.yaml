suite: aurora helm chart backwards compatibility deployment tests
description: >
  These tests ensure that legacy armory/aurora chart users that got started with Armory Deployments via

  > helm install armory-rna armory/aurora \
      --set agent-k8s.accountName=<target-cluster-name> \
      --set agent-k8s.clientId=<clientID-for-rna> \
      --set agent-k8s.clientSecret=<clientSecret-for-rna>
  
  Can upgrade / switch to the remote-network-agent chart via

  > helm upgrade armory-rna armory/remote-network-agent

  and have their legacy values mapped to the new values.
templates:
  - deployment.yaml
tests:
  - it: requires client id
    asserts:
      - failedTemplate:
          errorMessage: You must set clientId
  - it: requires client secret
    set:
      agent-k8s:
        clientId: muh-client-id
    asserts:
      - failedTemplate:
          errorMessage: You must set clientSecret
  - it: can source the client id and client secret from k8s-agent.clientId and k8s-agent.clientSecret
    set:
      agent-k8s:
        clientId: muh-client-id
        clientSecret: muh-client-secret
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "ADDITIONAL_JVM_OPTS"
      - matchRegex:
          path: spec.template.spec.containers[0].env[0].value
          pattern: .*?-Darmory.iam.oidc.client-id=muh-client-id.*?
      - matchRegex:
          path: spec.template.spec.containers[0].env[0].value
          pattern: .*?-Darmory.iam.oidc.client-secret=muh-client-secret.*?
  - it: maps agent-k8s.accountName to agent identifier system prop
    set:
      agent-k8s:
        clientId: muh-client-id
        clientSecret: muh-client-secret
        accountName: muh-account-name
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "ADDITIONAL_JVM_OPTS"
      - matchRegex:
          path: spec.template.spec.containers[0].env[0].value
          pattern: .*?-Dagent-identifier=muh-account-name.*?
  - it: maps agent-k8s.podAnnotations to annotations on the deployment
    set:
      agent-k8s:
        clientId: muh-client-id
        clientSecret: muh-client-secret
        podAnnotations:
          foo: bar
    asserts:
      - equal:
          path: spec.template.metadata.annotations.[foo]
          value: bar
  - it: maps agent-k8s.podLabels to labels on the deployment
    set:
      agent-k8s:
        clientId: muh-client-id
        clientSecret: muh-client-secret
        podLabels:
          labelKey: labelValue
    asserts:
      - equal:
          path: spec.template.metadata.labels.[labelKey]
          value: labelValue
  - it: maps agent-k8s.env to environment vars on the deployment
    set:
      agent-k8s:
        clientId: muh-client-id
        clientSecret: muh-client-secret
        env:
          - name: FOO
            value: BAR
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "FOO"
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: "BAR"