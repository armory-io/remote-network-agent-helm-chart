suite: remote network agent deployment tests
templates:
  - deployment.yaml
tests:
  - it: requires client id
    asserts:
      - failedTemplate:
          errorMessage: You must set clientId
  - it: requires client secret
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
    asserts:
      - failedTemplate:
          errorMessage: You must set clientSecret
  - it: only requires client id and secret to render
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: "oidc_clientId"
            value: encrypted:k8s!n:rna-client-credentials!k:client-id
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: "oidc_clientSecret"
            value: encrypted:k8s!n:rna-client-credentials!k:client-secret
  - it: sets the agent identifier system prop if agentIdentifier is set
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      agentIdentifier: muh-super-cool-agent
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: agent_identifier
            value: muh-super-cool-agent
  - it: maps podAnnotations to annotations on the agent pod
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      podAnnotations:
        foo: bar
    asserts:
      - equal:
          path: spec.template.metadata.annotations.[foo]
          value: bar
  - it: maps podLabels to labels on the agent pod
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      podLabels:
        labelKey: labelValue
    asserts:
      - equal:
          path: spec.template.metadata.labels.[labelKey]
          value: labelValue
  - it: maps podEnvironmentVariables to environment vars on the deployment
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      podEnvironmentVariables:
        - name: FOO
          value: bar
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: FOO
            value: bar
  - it: uses the replica count value
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      replicaCount: 10
    asserts:
      - equal:
          path: spec.replicas
          value: 10
  - it: uses image settings as defined
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      image:
        repository: some/other-repo
        pullPolicy: Always
        tag: muh-awesome-tag
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "some/other-repo:muh-awesome-tag"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "Always"
  - it: uses image pull secrets as defined
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      imagePullSecrets:
        - name: regcred
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: "regcred"
  - it: creates the config map as expected when custom config is provided
    documentIndex: 1
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      config:
        foo: bar
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: rna-config-overrides
      - equal:
          path: data.rna-overrides
          value: |
            foo: bar
  - it: configures the deployment as expected when custom config is provided
    documentIndex: 0
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      config:
        foo: bar
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.volumes
          content:
            name: overrides-config
            configMap:
              name: rna-config-overrides
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ADDITIONAL_ACTIVE_PROFILES
            value: overrides
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: overrides-config
            mountPath: /opt/go-application/config/rna-overrides.yaml
            subPath: rna-overrides

  - it: configures proxy system props, if proxy settings are enabled as values
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      proxy:
        enabled: true
        url: https://muh-proxy.internal.example.com:443
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HTTPS_PROXY
            value: https://muh-proxy.internal.example.com:443
  - it: configures proxy system props, if proxy settings are enabled as values with nonProxyHosts value
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      proxy:
        enabled: true
        url: https://muh-proxy.internal.example.com:443
        nonProxyHosts: 10.*
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: HTTPS_PROXY
            value: https://muh-proxy.internal.example.com:443
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NO_PROXY
            value: 10.*
  - it: configures app env if set
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      environment: dev
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: APPLICATION_ENVIRONMENT
            value: dev
  - it: configures app env if set
    set:
      clientId: muh-client-id
      clientSecret: muh-client-secret
      sandboxClusterId: foo-bar-bam
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: agent_sandboxClusterId
            value: foo-bar-bam
  - it: sets the resource request limits when set
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "256Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "100m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "512Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "200m"
  - it: configures the environment to prod if no env value is present
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: APPLICATION_ENVIRONMENT
            value: prod
  - it: configures the environment to staging if env is present
    set:
      clientId: encrypted:k8s!n:rna-client-credentials!k:client-id
      clientSecret: encrypted:k8s!n:rna-client-credentials!k:client-secret
      environment: staging
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: APPLICATION_ENVIRONMENT
            value: staging